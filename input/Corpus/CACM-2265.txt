model type checking programming languages treat computation classes objects numbers strings labels functions correct compilation execution question arises program properly constructed operations operands compatible activity answering question called type checking paper attempts isolate notion type checking presents partial solution type checking problem based notions abstraction application functions program mapped expression decidable subset lambda calculus characterizes type relations program eliminates information determination typewise correctness incorrectness program resolved reducing lambda calculus expression normal forms constant correct typewise correct program constant error application type checking algol 6 made attendant problems faced notion type checking discussed cacm november 1972 ledgard type checking types lambda calculus models programming languages syntax semantics compiler writing language implementation formal definition 4.12 4.22 5.2 5.21 5.23 ca72114 jb january 27 1978 2:3 pm 2265 5 2265 2265 5 2265 2265 5 2265 cacm2265 