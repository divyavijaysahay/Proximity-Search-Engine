general businessoriented language based decision expressions structure digital compute programming language covers wide class business processing applications presented structure based identifying incorporating compiler aspects common processes class permits writing extremely compact programs comparatively complex applications terms tables control expressions express information characteristic application furthermorelocal process affecting output involved effected local modifications program modification entry tables structure inexpensive preparation loadingspeed compilers translate source programs efficient machine codes approach adopted departs conventional mechanical language design philosophies stresses structural analysis class processes represented languages opposed emphasizing formal contentsindependent syntactical definitions relies exclusively nonprocedural representation process sets tables relations data results control statements procedure descriptions onetoone translations flowcharts invariant pattern procedure identified characteristic class batch processes philosophy potential overcome wellknown deficiencies businessoriented languages fully meets requirements set codasyl languages including machineindependence cacm february 1964 lombardi ca6428 jb march 1 1978 4:8 1135 4 1135 1136 4 1135 493 4 1135 271 4 1135 2765 4 1135 2888 4 1135 296 4 1135 729 4 1135 1135 5 1135 1135 5 1135 1135 5 1135 1959 5 1135 616 5 1135 1135 6 1135 cacm1135 